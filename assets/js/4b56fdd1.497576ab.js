"use strict";(self.webpackChunkzell_chaos=self.webpackChunkzell_chaos||[]).push([[8215],{13251:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var o=a(20349),s=a(74848),n=a(28453);const r={layout:"posts",title:"Fault-tolerant processing of process instances",date:new Date("2021-03-09T00:00:00.000Z"),categories:["chaos_experiment","broker","processing"],tags:["availability","data"],authors:"zell"},i="Chaos Day Summary",c={authorsImageUrls:[void 0]},l=[];function p(e){const t={code:"code",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Today I wanted to add another chaos experiment, to increase our automated chaos experiments collection. This time we will deploy a process model (with timer start event), restart a node and complete the process instance via ",(0,s.jsx)(t.code,{children:"zbctl"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"TL;DR;"})}),"\n",(0,s.jsx)(t.p,{children:"I was able to create the chaos toolkit experiment. It shows us that we are able to restore our state after fail over, which means we can trigger timer start events to create process instances even if they have been deployed before fail-over. Plus we are able to complete these instances."})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>i});var o=a(96540);const s={},n=o.createContext(s);function r(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(n.Provider,{value:t},e.children)}},20349:e=>{e.exports=JSON.parse('{"permalink":"/zeebe-chaos/2021/03/09/cont-workflow-instance","editUrl":"https://github.com/camunda/zeebe-chaos/blob/master/chaos-days/blog/2021-03-09-cont-workflow-instance/index.md","source":"@site/blog/2021-03-09-cont-workflow-instance/index.md","title":"Fault-tolerant processing of process instances","description":"Today I wanted to add another chaos experiment, to increase our automated chaos experiments collection. This time we will deploy a process model (with timer start event), restart a node and complete the process instance via zbctl.","date":"2021-03-09T00:00:00.000Z","tags":[{"inline":true,"label":"availability","permalink":"/zeebe-chaos/tags/availability"},{"inline":true,"label":"data","permalink":"/zeebe-chaos/tags/data"}],"readingTime":5.98,"hasTruncateMarker":true,"authors":[{"name":"Christopher Kujawa","title":"Chaos Engineer @ Zeebe","url":"https://github.com/ChrisKujawa","page":{"permalink":"/zeebe-chaos/authors/zell"},"imageURL":"https://github.com/ChrisKujawa.png","key":"zell"}],"frontMatter":{"layout":"posts","title":"Fault-tolerant processing of process instances","date":"2021-03-09T00:00:00.000Z","categories":["chaos_experiment","broker","processing"],"tags":["availability","data"],"authors":"zell"},"unlisted":false,"prevItem":{"title":"Camunda Cloud network partition","permalink":"/zeebe-chaos/2021/03/23/camunda-cloud-network-partition"},"nextItem":{"title":"Automating Deployment Distribution Chaos Experiment","permalink":"/zeebe-chaos/2021/02/23/automate-deployments-dist"}}')}}]);