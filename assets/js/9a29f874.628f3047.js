"use strict";(self.webpackChunkzell_chaos=self.webpackChunkzell_chaos||[]).push([[2533],{75742:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=t(74848),o=t(28453);const r={layout:"posts",title:"Broker Scaling and Performance",date:new Date("2023-12-20T00:00:00.000Z"),categories:["chaos_experiment","bpmn"],tags:["availability","performance"],authors:["lena","deepthi"]},i="Chaos Day Summary",s={permalink:"/zeebe-chaos/2023/12/20/Broker-scaling-performance",editUrl:"https://github.com/zeebe-io/zeebe-chaos/blob/master/chaos-days/blog/2023-12-20-Broker-scaling-performance/index.md",source:"@site/blog/2023-12-20-Broker-scaling-performance/index.md",title:"Broker Scaling and Performance",description:"With Zeebe now supporting the addition and removal of brokers to a running cluster, we wanted to test three things:",date:"2023-12-20T00:00:00.000Z",tags:[{inline:!0,label:"availability",permalink:"/zeebe-chaos/tags/availability"},{inline:!0,label:"performance",permalink:"/zeebe-chaos/tags/performance"}],readingTime:5.9,hasTruncateMarker:!0,authors:[{name:"Lena Sch\xf6nburg",title:"Senior Software Engineer @ Zeebe",url:"https://github.com/lenaschoenburg",imageURL:"https://github.com/lenaschoenburg.png",key:"lena",page:null},{name:"Deepthi Akkoorath",title:"Senior Software Engineer @ Zeebe",url:"https://github.com/deepthidevaki",imageURL:"https://github.com/deepthidevaki.png",key:"deepthi",page:null}],frontMatter:{layout:"posts",title:"Broker Scaling and Performance",date:"2023-12-20T00:00:00.000Z",categories:["chaos_experiment","bpmn"],tags:["availability","performance"],authors:["lena","deepthi"]},unlisted:!1,prevItem:{title:"Reducing the job activation delay",permalink:"/zeebe-chaos/2024/01/19/Job-Activation-Latency"},nextItem:{title:"Dynamic Scaling with Dataloss",permalink:"/zeebe-chaos/2023/12/19/Dynamic-Scaling-with-Dataloss"}},c={authorsImageUrls:[void 0,void 0]},l=[];function p(e){const n={li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"With Zeebe now supporting the addition and removal of brokers to a running cluster, we wanted to test three things:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Is there an impact on processing performance while scaling?"}),"\n",(0,a.jsx)(n.li,{children:"Is scaling resilient to high processing load?"}),"\n",(0,a.jsx)(n.li,{children:"Can scaling up improve processing performance?"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"TL;DR;"})," Scaling up works even under high load and has low impact on processing performance. After scaling is complete, processing performance improves in both throughput and latency."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var a=t(96540);const o={},r=a.createContext(o);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);